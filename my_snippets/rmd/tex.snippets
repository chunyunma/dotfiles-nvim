global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
    return x != '0' and x != '0'

endglobal

snippet template "Basic template" b
\documentclass[a4paper,12pt]{article}

\usepackage{amsmath, amssymb}

\title{${1:Insert a title}}
\author{Chunyun Ma}
\date{${2:`date +%Y-%m-%d`}}

\begin{document}
\maketitle

$0

\end{document}
endsnippet

# environment
snippet beg "begin{} / end{}" b
\\begin{$1}
	$0
\\end{$1}
endsnippet

# inline math
snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

# display math
snippet dm "Math" wA
\[
$1
\] $0
endsnippet

# super- and sub-script
context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet td "superscript" iA
^{$1}$0
endsnippet

# postfix
priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

# fraction
context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

# norm
context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet


